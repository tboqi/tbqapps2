本章详细介绍了从Gambas的编程环境内使用MySQL或PostgreSQL数据库的过程。对于我们而言，我们将假定你的机器上已经安装MySQL（或从你的机器可访问到的mysql服务器）并且这个mysql服务器是可以从Gambas程序连接到的。如果不是这样的话，那么你将需要参考MySQL手册，并弄清楚如何您的特定系统上安装MySQL数据库的分布。你也应该知道的事实，Gambas的还将与PostgreSQL和SQLite一起使用。 SQLite不是一个真正的客户机/服务器架构，如MySQL和PostgreSQL。这是一个平面文件数据库系统和不使用的客户机/服务器的数据库模型。对于我们在本章的目的，我们将坚持到MySQL，因为它可能是最广泛使用的三个数据库产品。

MySQL数据库软件包包括MySQL服务器和许多客户端程序。MySQL服务器是一个程序，存储和管理MySQL环境内的所有的数据库。与MySQL客户端程序是不胜枚举，但它是重要的，你要明白，每个客户端应用程序提供MySQL服务器上存储的数据或元数据的管理和/或管理有关的特定目的。我们将在本章处理与客户端程序名为mysql（注意是小写字母拼写）。这个客户端程序提供了一个命令行界面（CLI），可以使用交互式发出SQL语句到MySQL服务器，并立即显示结果。MySQL和MySQL之间的主要区别在于，MySQL被用来指整个MySQL分发包或指MySQL服务器，尽管MySQL是指客户CLI程序。

目的是什么，它有客户端和服务器，而不是一个单一的程序？服务器和客户端程序分为不同的实体，因此您可以使用您的系统上的客户端程序（S）的访问，可以在另一台计算机上运行的MySQL服务器上的数据。通过分离成一台服务器和N客户端包，它提供从数据检索界面分开数据。本章开始工作之前，我们强烈建议您熟悉与MySQL自己site18从官方的MySQL网站下载最新的手册。在最低限度，完成本章之前的MySQL用户手册第三章的教程。一旦你熟悉基本的SQL操作MySQL的环境内工作，你愿继续与本章，重点就如何完成同一类型的MySQL教程演示的东西，而是从内Gambas的程序。

为了访问数据库内Gambas的环境，你需要确保你的项目使用gb.db的组件。当你创建一个新项目，你需要去“项目属性”对话框中，你会发现一个标签组件。从这个标签对话框内，你可以选择你需要为你的程序的组件。在数据库的情况下，你将需要检查gb.db之前，你可以使用这个组件中定义的类。正如我们前面所述，db.db组件允许您访问以下数据库管理系统：PostgreSQL中，MySQL和SQLite。因为PostgreSQL和MySQL客户机/服务器数据库，这意味着你的程序将需要连接到数据库服务器。SQLite是一个flatfilebased数据库，所以没有为你的程序连接服务器进程。然而，这也意味着你的程序可能需要使用完全合格的路径，它使用默认路径（即，应用程序的路径），如果不使用任何数据库文件。

已gb.db组件设计，以创建一个中间层之间的数据库服务器和你的程序（抽象）。这使您可以使用相同的代码，无论你决定使用的数据库后端。有一个警告夫妇，当然。这个抽象的方法只适用于如果您已经创建的数据库使用的数据库管理，或由使用gb.db组件。此外，你必须使用查找，创建和编辑与gb.db组件methodsprovided。你不能把SQL值，直接在一个请求 - 你必须使用上述方法的替代功能，来实现这一目标。最后，您不能使用Exec方法直接发送SQL请求服务器访问serverspecific功能。虽然这听起来相当严格，在现实中是不是你的程序障碍。鉴于这几个注意事项，可以完成几乎所有的数据库操作需要从Gambas的环境内。支持在gb.db组件的类连接，数据库，数据库，字段，索引，结果，ResultField，表和用户。

Connection Class

Connection类建立数据库连接。为了成功地连接到一个数据库，你必须首先创建一个连接对象，并设置必要的属性，将数据库使用。接下来，您必须调用Open方法。如果您连接到一个SQLite数据库和Name属性是空的，打开一个数据库在内存中。如果指定的名称是一个绝对路径，路径使用。如果指定的名称是一个相对路径，主机属性为null，该数据库位于应用程序的临时目录/ tmp / Gambas的$ UID/ SQLite的。否则，主机将包含数据库目录的名称和数据库文件的路径是串联的主机和名称属性值的结果。这个类是创建和调用约定是：
DIM hConnection AS Connection
hConnection = NEW Connection() 

Connection Properties

当hConnection对象被实例化，它创建一个新的无效连接的对象。然后，您将需要设置此对象的属性。你可以使用同一个连接对象的属性，包括字符集，数据库，HST，登录，密码，姓名，港口，表型，用户和版本。我们将这些解释在下面的章节。

	Charset
	字符集是一个只读属性，返回由数据库使用的字符集。这是可能存储在数据库中字符串直接在UTF8格式。但是，您也可以使用此属性的结合兑换$（）子程序转换成UTF8格式的数据库字符集的格式。使用的数据库的字符集，在性能，然而在成本。这是因为你必须使用兑换$（）子程序和每次读取或字符串数据写入到数据库中的字段。现在，这是唯一的方法可以做到这一点，如果你想使用的stringbased的SQL函数和内置的排序例程的底层数据库管理系统（MySQL和PostgreSQL或SQLite）。Gambas的未来版本可能会自动之间的转换Gambas的字符串和数据库的字符集。
	
	Databases
	
	可以检查数据库属性获得集合对象将包含由数据库服务器管理的所有数据库的名称。语法是：
	PROPERTY Databases AS .ConnectionDatabases 
	
	数据收集（这是枚举使用每个语句）将是相同的，如果你从mysql客户端CLI类型SHOW DATABASES的。


